//@version=6
strategy("BB EMA ETH/USDT 4h - Train/Test",
     overlay = true,
     initial_capital = 1000,
     default_qty_type = strategy.percent_of_equity,
     default_qty_value = 100,
     calc_on_every_tick = false)

// ───────────────────────────────
// Inputs for indicators
ema_len = input.int(100, "EMA Length")
bb_len  = input.int(20, "BB Length")
bb_mult = input.float(1.5, "BB Multiplier", step = 0.1)

// Inputs for training & testing dates
trainStart = input.time(timestamp("2018-01-01"), "Training Start Date")
trainEnd   = input.time(timestamp("2022-12-31"), "Training End Date")
testStart  = input.time(timestamp("2023-01-01"), "Testing Start Date")
testEnd    = input.time(timestamp("2025-12-31"), "Testing End Date")

// Which segment to run the strategy on
segment = input.string("Training", "Segment",
     options = ["Training", "Testing", "All"])

// Compute date filters
inTraining = (time > trainStart and time < trainEnd)
inTesting  = (time > testStart and time < testEnd)
inDateRange = switch segment
    "Training" => inTraining
    "Testing"  => inTesting
    => true // "All" = trade entire history

// ───────────────────────────────
// Indicators
ema = ta.ema(close, ema_len)
[bb_upper, bb_middle, bb_lower] = ta.bb(close, bb_len, bb_mult)

// ───────────────────────────────
// Signals
buy  = ta.crossover(close, bb_upper) and close > ema
sell = ta.crossunder(close, bb_middle) or ta.crossunder(close, ema)

// ───────────────────────────────
// Orders (only active in selected date range)
if (buy and inDateRange)
    strategy.entry("Long", strategy.long)

if (sell and inDateRange)
    strategy.close("Long")

// ───────────────────────────────
// Plots
plot(ema, "EMA", color = color.new(color.orange, 0))
plot(bb_upper, "BB Upper", color = color.new(color.blue, 0))
plot(bb_middle, "BB Middle", color = color.new(color.gray, 0))
plot(bb_lower, "BB Lower", color = color.new(color.blue, 0))
